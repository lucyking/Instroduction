
Input:
8, 5
3, 8, 8, 1, 4, 6, 5, 6
0, 10, 10, 0, 7, 0, 7, 1
7, 4, 0, 3, 3, 3, 4, 5
1, 4, 0, 9, 10, 6, 6, 1
9, 6, 9, 6, 8, 6, 0, 0
 

Expectation:
67

Output:
['/opt/OLCC/Competition/Hangzhou_Coding_Contest_2018/problem2-20181112000000-20181125235959/result/clxia/Solution.py', '/opt/OLCC/Competition/Hangzhou_Coding_Contest_2018/problem2-20181112000000-20181125235959/result/.././cases/1_1.csv']
*******
result_2_10 >>>
475284128
*******
*******
result_2_03 >>>
0
*******
*******
result_2_05 >>>
78405
*******
*******
2_03.csv >>>
20, 9
1
1
2
3
1
1
2
19
20
*******
*******
2_06.csv >>>
15, 5
1
2, 3
4, 5, 6
7, 8, 9, 10
11, 12, 13, 14, 15
*******
*******
result_2_08 >>>
6719798
*******
*******
2_01.csv >>>
4, 4
1, 2
2, 3
3, 4
4
*******
*******
result_2_04 >>>
135
*******
*******
result_2_06 >>>
120
*******
*******
2_07.csv >>>
10, 8
2, 3, 4, 8, 9
1, 2, 5, 7, 8, 9, 10
1, 3, 8
1, 2, 3, 4, 5, 9, 10
5, 6, 9, 10
1, 4, 5, 10
1, 3, 4, 5, 6, 7, 8, 9
2, 9
*******
*******
2_04.csv >>>
20, 9
1, 2, 3, 4, 5, 6, 7, 10, 11, 17
1, 2, 3, 4, 5
3, 4, 5
2, 3
2
1, 2, 4
1, 8, 10, 11
1, 2, 5, 6, 8
2, 4, 6, 7, 9, 10
*******
*******
2_09.csv >>>
20, 9
4, 6, 8, 10, 12, 13, 14, 15, 16, 19
1, 4, 5, 9, 10, 11, 12, 13
3, 6, 8, 9, 10, 12, 14, 16, 19
1, 2, 13, 17, 18
1, 2, 3, 6, 10, 13, 16, 17, 18, 19, 20
1, 6, 7, 8, 12, 13, 19, 20
1, 2, 3, 5, 6, 7, 9, 13, 14, 17, 18, 20
1, 2, 5, 6, 7, 8, 11, 16, 20
1, 2, 8, 9, 10, 11, 14, 15, 16, 19, 20
*******
*******
2_05.csv >>>
20, 9
18, 19, 20
1, 2, 3, 4, 5
3, 4, 5, 7, 11
2, 3, 6, 8, 9
2, 3, 6, 7, 8
1, 2, 4, 5, 8
1, 8, 10, 11, 12
1, 2, 5, 6, 8, 10
2, 4, 6, 7, 9, 10
*******
*******
result_2_1 >>>
745
*******
*******
2_1.csv >>>
9, 6
1, 5, 6, 8, 9
1, 6, 8
2, 8, 9
1, 5, 7, 8, 9
1, 2, 4, 6, 7, 8
1, 3, 4, 7, 8, 9
*******
*******
result_2_02 >>>
0
*******
*******
result_2_01 >>>
1
*******
*******
result_2_07 >>>
3797
*******
*******
2_10.csv >>>
20, 10
1, 3, 5, 6, 9, 11, 17, 19, 20
1, 3, 4, 7, 11, 12, 13, 14, 16, 19
1, 3, 4, 5, 6, 7, 9, 11, 13, 16, 17, 20
1, 3, 4, 7, 9, 10, 13, 14, 16, 17, 19
1, 2, 3, 5, 6, 7, 9, 11, 12, 16, 17, 18, 19, 20
3, 7, 8, 9, 11, 13, 14, 15, 16, 18, 19, 20
3, 6, 7, 10, 13, 14, 16, 20
6, 7, 8, 9, 16, 17, 20
2, 4, 5, 6, 8, 10, 13, 14, 19
1, 3, 7, 8, 10, 16, 18, 19, 20
*******
*******
result_2_09 >>>
47803417
*******
*******
2_08.csv >>>
15, 10
1, 2, 3, 6, 7, 8, 9
1, 6, 7, 8, 9, 12, 13
1, 2, 4, 5, 6, 10, 11, 12, 15
2, 4, 5, 6, 9, 10, 11, 14
1, 4, 7, 8, 10, 11, 12, 14
8, 11, 14
1, 2, 4, 5, 6, 8, 10, 11, 12, 13, 15
1, 2, 3, 6, 7, 10, 11, 12
1, 8, 10, 12, 13, 15
2, 3, 5, 10, 11, 13, 15
*******
*******
make_sample.py >>>
# -*- coding: utf-8 -*-
"""
Code rally 2018 problem1 sample maker
"""
import sys
import os
def print_sample1(filename, testline_num, user_num, ratio=0.5):
import random
user_testline = [[i for i in range(1, testline_num + 1) if random.random() < ratio] for _ in range(user_num)]
with open(filename, "w") as wf:
wf.write("# testline_num, user_num\n"
"# user1_testline_list\n"
"# user2_testline_list\n"
"# ...\n")
wf.write("%d, %d" % (testline_num, user_num) + "\n")
wf.write("\n".join(", ".join(str(i) for i in user) for user in user_testline) + "\n")
def print_usage():
print "Usage: python %s testline_num user_num output_file.csv" % sys.argv[0]
print "       1 <= testline_num <= user_num <= 20"
if __name__ == '__main__':
if len(sys.argv) != 4:
print_usage()
elif os.path.exists(sys.argv[3]):
print "File exist %s!" % sys.argv[3]
else:
try:
testline_num, user_num = int(sys.argv[1]), int(sys.argv[2])
assert 1 <= user_num <= testline_num <= 20
print_sample1(sys.argv[3], testline_num, user_num)
except (ValueError, TypeError, AssertionError):
print_usage()
*******
*******
2_02.csv >>>
6, 4
1, 2
1, 2
1, 2
1, 2, 3, 4, 5, 6
*******

The result is NOK



